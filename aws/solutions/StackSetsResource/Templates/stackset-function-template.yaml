AWSTemplateFormatVersion: 2010-09-09
Description: VPC template 2019-01-14
Parameters:
  Environment:
    Description: Environment
    Type: String
  ApplicationName:
    Description: ApplicationName
    Type: String
  CIDRBase:
    Default: 10.100.0.0/16
    Description: 'CIDR block'
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref CIDRBase
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationName 
              - !Ref Environment
  FlowRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'vpc-flow-logs.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'flowlogs-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogGroups'
            - 'logs:DescribeLogStreams'
            Resource: !GetAtt 'LogGroup.Arn'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
  FlowLog:
    Type: 'AWS::EC2::FlowLog'
    Properties:
      DeliverLogsPermissionArn: !GetAtt
        - FlowRole
        - Arn
      LogGroupName: VPCFlowLogs
      ResourceId: !Ref VPC
      ResourceType: 'VPC'
      TrafficType: ALL
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
#  PublicRouteToPrivateSubTEMP:
#    Type: 'AWS::EC2::Route'
#    DependsOn: AttachGateway
#    Properties:
#      RouteTableId: !Ref PrivateRouteTable
#      DestinationCidrBlock: 0.0.0.0/0
#      GatewayId: !Ref InternetGateway
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
  InboundNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  OutBoundNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
Outputs:
  VPC:
    Description: VPC ID
    Value: !Ref VPC
  PublicRouteTable:
    Description: Public Route Table
    Value: !Ref PublicRouteTable
  PrivateRouteTable:
    Description: Private Route Table
    Value: !Ref PrivateRouteTable
  NetworkAcl:
    Description: Network ACL
    Value: !Ref NetworkAcl
